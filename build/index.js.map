{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAEA,gFAAgF;AAChF,8CAA8C;AAC9C,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AACxD,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAGpD,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,GAAQ,EAAE,SAAiB;IAClE,OAAO,MAAM,mBAAmB,CAAC,kBAAkB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AACtE,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,aAAqB,EAAE,QAAgB,EAAE,OAAe,EAAE,GAAW;IAC5G,OAAO,MAAM,mBAAmB,CAAC,kBAAkB,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;AAC7F,CAAC;AAED,OAAO,EAAE,iBAAiB,EAA0B,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to ExpoEncryptor.web.ts\n// and on native platforms to ExpoEncryptor.ts\nimport ExpoEncryptorModule from './ExpoEncryptorModule';\nimport ExpoEncryptorView from './ExpoEncryptorView';\nimport { ExpoEncryptorViewProps, ExpoEncryptorEncryptionResult } from './ExpoEncryptor.types';\n\nexport async function encryptWithSymmKey(key: any, plainText: string): Promise<ExpoEncryptorEncryptionResult> {\n  return await ExpoEncryptorModule.encryptWithSymmKey(key, plainText);\n}\n\nexport async function decryptWithSymmKey(encryptedText: string, ivString: string, symmKey: string, tag: string): Promise<string> {\n  return await ExpoEncryptorModule.decryptWithSymmKey(encryptedText, ivString, symmKey, tag);\n}\n\nexport { ExpoEncryptorView, ExpoEncryptorViewProps };\n"]}